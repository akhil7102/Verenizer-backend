import { Button } from "./ui/button";
import { Badge } from "./ui/badge";
import { 
  ArrowLeft, 
  RefreshCw, 
  Shield, 
  AlertTriangle, 
  XCircle, 
  CheckCircle, 
  FileText, 
  Clock,
  Database,
  Download,
  Eye
} from "lucide-react";
import { useState } from "react";

interface ScanResultsProps {
  results: {
    totalFiles: number;
    cleanFiles: number;
    threatsFound: number;
    suspiciousFiles: number;
    scanDuration: string;
    scanType: string;
    files: Array<{
      name: string;
      size: number;
      status: 'clean' | 'threat' | 'suspicious';
      threats: string[];
      hash: string;
      antivirusResults: Array<{
        engine: string;
        detected: boolean;
        result: string;
      }>;
      detectionRatio: string;
    }>;
  };
  isDarkMode: boolean;
  onNewScan: () => void;
  onBackToHome: () => void;
  scanHistory?: any[];
  onRescan?: (historyItem: any) => void;
}

export function ScanResults({ results, isDarkMode, onNewScan, onBackToHome }: ScanResultsProps) {
  const [showOnlyDetections, setShowOnlyDetections] = useState(false);
  
  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'threat':
        return <XCircle className="w-5 h-5 text-red-400" />;
      case 'suspicious':
        return <AlertTriangle className="w-5 h-5 text-yellow-400" />;
      default:
        return <CheckCircle className="w-5 h-5 text-green-400" />;
    }
  };

  const downloadReport = (file: any) => {
    const reportContent = `
=== VERINIZER SECURITY SCAN REPORT ===

File: ${file.name}
Size: ${(file.size / 1024 / 1024).toFixed(2)} MB
SHA256: ${file.hash}
Status: ${file.status.toUpperCase()}
Detection Ratio: ${file.detectionRatio}
Scan Date: ${new Date().toLocaleString()}

=== ANTIVIRUS ENGINE RESULTS ===

${file.antivirusResults.map((result: any) => 
  `${result.engine.padEnd(25)} | ${result.detected ? 'DETECTED' : 'CLEAN'} | ${result.result || 'N/A'}`
).join('\n')}

${file.threats.length > 0 ? `\n=== DETECTED THREATS ===\n\n${file.threats.join('\n')}` : ''}

=== SUMMARY ===

Total Engines: ${file.antivirusResults.length}
Detections: ${file.antivirusResults.filter((r: any) => r.detected).length}
Clean Results: ${file.antivirusResults.filter((r: any) => !r.detected).length}

Generated by Verinizer Security Scanner
Visit: https://varenizer.netlify.app/
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = 'verinizer report.txt';
    
    // For better browser compatibility
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    // Clean up the blob URL
    URL.revokeObjectURL(url);
  };

  const getStatusBadge = (status: string, detectionRatio: string) => {
    switch (status) {
      case 'threat':
        return (
          <Badge className="bg-red-500/20 text-red-300 border border-red-400/30 px-3 py-1">
            Threat Detected ({detectionRatio})
          </Badge>
        );
      case 'suspicious':
        return (
          <Badge className="bg-yellow-500/20 text-yellow-300 border border-yellow-400/30 px-3 py-1">
            Suspicious ({detectionRatio})
          </Badge>
        );
      default:
        return (
          <Badge className="bg-green-500/20 text-green-300 border border-green-400/30 px-3 py-1">
            Clean ({detectionRatio})
          </Badge>
        );
    }
  };

  return (
    <div className={`flex-1 p-8 ${isDarkMode 
      ? 'bg-gradient-to-br from-slate-950 via-slate-900/95 to-slate-950' 
      : 'bg-gradient-to-br from-white via-slate-50/80 to-cyan-50/60'
    } relative`}>
      
      {/* Enhanced Background Effects */}
      <div className="absolute inset-0 overflow-hidden">
        {isDarkMode ? (
          <>
            <div className="absolute top-20 right-20 w-96 h-96 bg-gradient-to-br from-cyan-500/8 via-purple-500/6 to-green-500/8 rounded-full blur-3xl animate-pulse"></div>
            <div className="absolute bottom-20 left-20 w-80 h-80 bg-gradient-to-tr from-green-500/6 via-cyan-500/8 to-blue-500/6 rounded-full blur-3xl animate-pulse delay-1000"></div>
            <div className="absolute top-1/2 left-1/2 w-64 h-64 bg-gradient-to-r from-purple-500/4 to-pink-500/4 rounded-full blur-2xl animate-pulse delay-500"></div>
          </>
        ) : (
          <>
            <div className="absolute top-20 right-20 w-96 h-96 bg-gradient-to-br from-cyan-500/12 via-blue-500/10 to-purple-500/8 rounded-full blur-3xl animate-pulse"></div>
            <div className="absolute bottom-20 left-20 w-80 h-80 bg-gradient-to-tr from-green-500/12 via-emerald-500/10 to-cyan-500/8 rounded-full blur-3xl animate-pulse delay-1000"></div>
          </>
        )}
      </div>

      <div className="max-w-6xl mx-auto relative z-10">
        {/* Header with Enhanced Design */}
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center gap-6">
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-r from-cyan-400 to-green-400 rounded-2xl blur-xl opacity-50 scale-150 animate-pulse"></div>
              <div className="relative z-10 p-4 bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-sm rounded-2xl border border-slate-700/50 shadow-2xl">
                <img 
                  src="/assets/verinizer-logo.svg" 
                  alt="Verinizer" 
                  className="w-16 h-16 drop-shadow-2xl"
                />
              </div>
            </div>
            <div>
              <h1 className="text-4xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-green-400 bg-clip-text text-transparent drop-shadow-sm">
                Scan Results
              </h1>
              <p className={`mt-2 text-lg ${isDarkMode ? 'text-slate-300' : 'text-slate-600'} flex items-center gap-2`}>
                <Clock className="w-4 h-4" />
                {results.scanType.charAt(0).toUpperCase() + results.scanType.slice(1)} scan completed in {results.scanDuration}
              </p>
            </div>
          </div>
          
          <div className="flex gap-4">
            <Button 
              onClick={onBackToHome}
              variant="outline"
              className={`${isDarkMode 
                ? 'border-slate-600/50 text-slate-300 hover:text-white bg-slate-800/50 hover:bg-slate-700/60 hover:border-cyan-400/50' 
                : 'border-slate-300/60 text-slate-700 hover:text-slate-900 bg-white/70 hover:bg-white/90 hover:border-cyan-500/50'
              } transition-all duration-300 hover:scale-105 hover:shadow-xl backdrop-blur-sm px-6 py-3 shadow-lg`}
            >
              <ArrowLeft className="w-5 h-5 mr-2" />
              Back to Home
            </Button>
            
            <Button 
              onClick={onNewScan}
              className="bg-gradient-to-r from-cyan-500 via-purple-500 to-green-500 hover:from-cyan-400 hover:via-purple-400 hover:to-green-400 text-white transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-cyan-500/25 px-6 py-3"
            >
              <RefreshCw className="w-5 h-5 mr-2" />
              New Scan
            </Button>
          </div>
        </div>

        {/* Enhanced Summary Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className={`p-6 rounded-2xl ${isDarkMode 
            ? 'bg-gradient-to-br from-slate-800/70 via-slate-800/60 to-slate-900/70 border border-slate-700/40' 
            : 'bg-gradient-to-br from-white/80 via-white/70 to-slate-50/80 border border-slate-200/50'
          } backdrop-blur-sm shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105 group`}>
            <div className="flex items-center gap-4">
              <div className="w-14 h-14 bg-gradient-to-r from-blue-500/30 to-cyan-500/30 rounded-xl flex items-center justify-center border border-blue-400/30 group-hover:scale-110 transition-transform duration-300 shadow-lg shadow-blue-500/20">
                <FileText className="w-7 h-7 text-blue-400" />
              </div>
              <div>
                <p className={`text-3xl font-bold ${isDarkMode ? 'text-slate-200' : 'text-slate-800'} group-hover:text-blue-400 transition-colors duration-300`}>
                  {results.totalFiles}
                </p>
                <p className={`${isDarkMode ? 'text-slate-400' : 'text-slate-600'}`}>Total Files</p>
              </div>
            </div>
          </div>
          
          <div className={`p-6 rounded-2xl ${isDarkMode 
            ? 'bg-gradient-to-br from-green-800/50 via-green-800/40 to-emerald-800/50 border border-green-600/40' 
            : 'bg-gradient-to-br from-green-50/80 via-green-50/70 to-emerald-50/80 border border-green-200/50'
          } backdrop-blur-sm shadow-xl hover:shadow-2xl hover:shadow-green-500/20 transition-all duration-300 hover:scale-105 group`}>
            <div className="flex items-center gap-4">
              <div className="w-14 h-14 bg-gradient-to-r from-green-500/30 to-emerald-500/30 rounded-xl flex items-center justify-center border border-green-400/30 group-hover:scale-110 transition-transform duration-300 shadow-lg shadow-green-500/20">
                <CheckCircle className="w-7 h-7 text-green-400" />
              </div>
              <div>
                <p className="text-3xl font-bold text-green-300 group-hover:text-green-200 transition-colors duration-300">
                  {results.cleanFiles}
                </p>
                <p className="text-green-200/80">Clean Files</p>
              </div>
            </div>
          </div>
          
          <div className={`p-6 rounded-2xl ${isDarkMode 
            ? 'bg-gradient-to-br from-red-800/50 via-red-800/40 to-red-900/50 border border-red-600/40' 
            : 'bg-gradient-to-br from-red-50/80 via-red-50/70 to-red-100/80 border border-red-200/50'
          } backdrop-blur-sm shadow-xl hover:shadow-2xl hover:shadow-red-500/20 transition-all duration-300 hover:scale-105 group`}>
            <div className="flex items-center gap-4">
              <div className="w-14 h-14 bg-gradient-to-r from-red-500/30 to-red-600/30 rounded-xl flex items-center justify-center border border-red-400/30 group-hover:scale-110 transition-transform duration-300 shadow-lg shadow-red-500/20">
                <XCircle className="w-7 h-7 text-red-400" />
              </div>
              <div>
                <p className="text-3xl font-bold text-red-300 group-hover:text-red-200 transition-colors duration-300">
                  {results.threatsFound}
                </p>
                <p className="text-red-200/80">Threats Found</p>
              </div>
            </div>
          </div>
          
          <div className={`p-6 rounded-2xl ${isDarkMode 
            ? 'bg-gradient-to-br from-yellow-800/50 via-orange-800/40 to-yellow-900/50 border border-yellow-600/40' 
            : 'bg-gradient-to-br from-yellow-50/80 via-orange-50/70 to-yellow-100/80 border border-yellow-200/50'
          } backdrop-blur-sm shadow-xl hover:shadow-2xl hover:shadow-yellow-500/20 transition-all duration-300 hover:scale-105 group`}>
            <div className="flex items-center gap-4">
              <div className="w-14 h-14 bg-gradient-to-r from-yellow-500/30 to-orange-500/30 rounded-xl flex items-center justify-center border border-yellow-400/30 group-hover:scale-110 transition-transform duration-300 shadow-lg shadow-yellow-500/20">
                <AlertTriangle className="w-7 h-7 text-yellow-400" />
              </div>
              <div>
                <p className="text-3xl font-bold text-yellow-300 group-hover:text-yellow-200 transition-colors duration-300">
                  {results.suspiciousFiles}
                </p>
                <p className="text-yellow-200/80">Suspicious</p>
              </div>
            </div>
          </div>
        </div>

        {/* Enhanced File Results */}
        <div className="space-y-6">
          <h2 className={`text-2xl font-semibold ${isDarkMode ? 'text-slate-200' : 'text-slate-800'} bg-gradient-to-r from-cyan-400 to-green-400 bg-clip-text text-transparent flex items-center gap-3`}>
            <Database className="w-6 h-6 text-cyan-400" />
            File Analysis Results
          </h2>
          
          <div className="space-y-4">
            {results.files.map((file, index) => (
              <div key={index} className={`p-6 rounded-2xl ${isDarkMode 
                ? 'bg-gradient-to-br from-slate-800/70 via-slate-800/60 to-slate-900/70 border border-slate-700/40' 
                : 'bg-gradient-to-br from-white/80 via-white/70 to-slate-50/80 border border-slate-200/50'
              } backdrop-blur-sm shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-[1.01] group`}>
                <div className="flex items-start justify-between mb-4">
                  <div className="flex items-center gap-4">
                    <div className="p-2 rounded-lg bg-gradient-to-r from-slate-700/50 to-slate-600/50 border border-slate-600/30">
                      {getStatusIcon(file.status)}
                    </div>
                    <div>
                      <h3 className={`font-semibold text-lg ${isDarkMode ? 'text-slate-200' : 'text-slate-800'} group-hover:text-cyan-400 transition-colors duration-300`}>
                        {file.name}
                      </h3>
                      <p className={`${isDarkMode ? 'text-slate-400' : 'text-slate-600'} flex items-center gap-2`}>
                        <span>{(file.size / 1024 / 1024).toFixed(2)} MB</span>
                        <span>•</span>
                        <span className="font-mono text-xs">SHA256: {file.hash.substring(0, 16)}...</span>
                      </p>
                    </div>
                  </div>
                  
                  <div className="flex gap-3">
                    {getStatusBadge(file.status, file.detectionRatio)}
                    <Button 
                      variant="outline" 
                      size="sm"
                      onClick={() => downloadReport(file)}
                      className={`${isDarkMode 
                        ? 'border-slate-600/50 text-slate-300 hover:text-white bg-slate-800/50 hover:bg-slate-700/50 hover:border-slate-500/50' 
                        : 'border-slate-300/60 text-slate-700 hover:text-slate-900 bg-white/70 hover:bg-white/90 hover:border-slate-400/50'
                      } transition-all duration-200 hover:scale-105 shadow-lg`}
                    >
                      <Download className="w-4 h-4 mr-2" />
                      Report
                    </Button>
                  </div>
                </div>

                {/* Enhanced Threat Details */}
                {file.threats.length > 0 && (
                  <div className="mb-4 p-4 rounded-xl bg-gradient-to-r from-red-900/40 to-red-800/40 border border-red-500/30 backdrop-blur-sm shadow-lg shadow-red-500/10">
                    <h4 className="font-medium text-red-200 mb-3 flex items-center gap-2">
                      <Shield className="w-5 h-5" />
                      Detected Threats:
                    </h4>
                    <div className="flex flex-wrap gap-2">
                      {file.threats.map((threat, threatIndex) => (
                        <Badge key={threatIndex} className="bg-red-500/30 text-red-200 border border-red-400/40 hover:bg-red-500/40 transition-colors duration-200 shadow-sm">
                          {threat}
                        </Badge>
                      ))}
                    </div>
                  </div>
                )}

                {/* Enhanced Antivirus Results */}
                <div className={`border ${isDarkMode ? 'border-slate-700/40' : 'border-slate-200/50'} rounded-xl overflow-hidden shadow-lg`}>
                  <div className={`${isDarkMode 
                    ? 'bg-gradient-to-r from-slate-800/60 to-slate-700/60' 
                    : 'bg-gradient-to-r from-slate-100/80 to-slate-50/80'
                  } p-4 border-b ${isDarkMode ? 'border-slate-700/40' : 'border-slate-200/50'} backdrop-blur-sm`}>
                    <div className="flex items-center justify-between">
                      <h4 className={`font-medium ${isDarkMode ? 'text-slate-200' : 'text-slate-800'} flex items-center gap-2`}>
                        <Database className="w-5 h-5 text-purple-400" />
                        Antivirus Engine Results ({file.detectionRatio})
                      </h4>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() => setShowOnlyDetections(!showOnlyDetections)}
                        className={`transition-all duration-200 hover:scale-105 ${
                          showOnlyDetections 
                            ? 'bg-purple-600/30 text-purple-200 border-purple-500/50 shadow-lg shadow-purple-500/20' 
                            : isDarkMode
                              ? 'text-slate-300 hover:text-white bg-slate-800/50 hover:bg-slate-700/50 border-slate-600/50'
                              : 'text-slate-700 hover:text-slate-900 bg-white/70 hover:bg-white/90 border-slate-300/60'
                        }`}
                      >
                        <Eye className="w-4 h-4 mr-2" />
                        {showOnlyDetections ? 'Show All' : 'Detections Only'}
                      </Button>
                    </div>
                  </div>
                  
                  <div className="p-4">
                    <div className="space-y-3">
                      {file.antivirusResults
                        .filter(result => showOnlyDetections ? result.detected : true)
                        .map((result, resultIndex) => (
                        <div key={resultIndex} className={`flex items-center justify-between p-4 rounded-lg ${isDarkMode 
                          ? 'bg-gradient-to-r from-slate-800/50 to-slate-700/50 border border-slate-600/30 hover:border-slate-500/40' 
                          : 'bg-gradient-to-r from-white/60 to-slate-50/60 border border-slate-200/40 hover:border-slate-300/50'
                        } hover:shadow-lg transition-all duration-200 group`}>
                          <div className="flex items-center gap-3">
                            <span className={`font-medium min-w-32 ${isDarkMode ? 'text-slate-300' : 'text-slate-700'} group-hover:text-cyan-400 transition-colors duration-200`}>
                              {result.engine}
                            </span>
                            {/* Enhanced reliability indicators - Fixed glow effects */}
                            {['Microsoft Defender', 'Kaspersky', 'Bitdefender', 'Norton', 'Avast'].includes(result.engine) && (
                              <Badge className="bg-cyan-500/20 text-cyan-300 border border-cyan-400/40 text-xs px-2 py-1">
                                Premium
                              </Badge>
                            )}
                            {['AVG', 'Trend Micro', 'F-Secure', 'ESET', 'McAfee'].includes(result.engine) && (
                              <Badge className="bg-green-500/20 text-green-300 border border-green-400/40 text-xs px-2 py-1">
                                Standard
                              </Badge>
                            )}
                          </div>
                          <div className="flex items-center gap-3">
                            {result.detected ? (
                              <>
                                <XCircle className="w-5 h-5 text-red-400" />
                                <span className="text-red-300 font-medium">{result.result}</span>
                              </>
                            ) : (
                              <>
                                <CheckCircle className="w-5 h-5 text-green-400" />
                                <span className="text-green-300">Clean</span>
                              </>
                            )}
                          </div>
                        </div>
                      ))}
                    </div>
                    
                    {/* Enhanced Results Summary */}
                    <div className={`mt-4 p-3 ${isDarkMode 
                      ? 'bg-slate-800/40 border border-slate-600/30' 
                      : 'bg-slate-100/60 border border-slate-200/40'
                    } rounded-lg backdrop-blur-sm`}>
                      <div className="flex items-center justify-between text-sm">
                        <span className={`${isDarkMode ? 'text-slate-400' : 'text-slate-600'} flex items-center gap-2`}>
                          <Database className="w-4 h-4" />
                          Showing {file.antivirusResults.filter(result => showOnlyDetections ? result.detected : true).length} of {file.antivirusResults.length} engines
                        </span>
                        
                        {showOnlyDetections && (
                          <div className="flex items-center gap-2">
                            <span className="text-yellow-400 font-medium">Detections Only</span>
                            <Button
                              variant="ghost"
                              size="sm"
                              onClick={() => setShowOnlyDetections(false)}
                              className={`h-6 px-2 text-xs ${isDarkMode 
                                ? 'text-slate-400 hover:text-slate-200 hover:bg-slate-700/50' 
                                : 'text-slate-600 hover:text-slate-800 hover:bg-slate-200/50'
                              } transition-all duration-200`}
                            >
                              Show All
                            </Button>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}